// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ResumeProject.Data;
using System;

namespace ResumeProject.Migrations
{
    [DbContext(typeof(ResumeContext))]
    partial class ResumeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ResumeProject.Models.Description", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Duties");

                    b.Property<int>("ExperienceID");

                    b.HasKey("ID");

                    b.HasIndex("ExperienceID");

                    b.ToTable("Description");
                });

            modelBuilder.Entity("ResumeProject.Models.Education", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Degree");

                    b.Property<DateTime>("GraduationDate");

                    b.Property<int>("PersonID");

                    b.Property<string>("School");

                    b.HasKey("ID");

                    b.HasIndex("PersonID");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("ResumeProject.Models.Event", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<DateTime>("EventDate");

                    b.Property<string>("EventType");

                    b.Property<int>("PersonID");

                    b.Property<string>("Role");

                    b.HasKey("ID");

                    b.HasIndex("PersonID");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("ResumeProject.Models.Experience", b =>
                {
                    b.Property<int>("ID");

                    b.Property<bool>("CurrentlyStillWorking");

                    b.Property<string>("Organization");

                    b.Property<string>("Role");

                    b.Property<int>("YearsService");

                    b.HasKey("ID");

                    b.ToTable("Experience");
                });

            modelBuilder.Entity("ResumeProject.Models.ExperienceType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ExpType");

                    b.Property<int>("ExperienceID");

                    b.HasKey("ID");

                    b.HasIndex("ExperienceID")
                        .IsUnique();

                    b.ToTable("ExperienceType");
                });

            modelBuilder.Entity("ResumeProject.Models.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.Property<int>("PhoneNumber");

                    b.HasKey("ID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("ResumeProject.Models.PersonalSkill", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("PersonID");

                    b.Property<string>("Skill");

                    b.HasKey("ID");

                    b.HasIndex("PersonID");

                    b.ToTable("PersonalSkill");
                });

            modelBuilder.Entity("ResumeProject.Models.Description", b =>
                {
                    b.HasOne("ResumeProject.Models.Experience", "Experience")
                        .WithMany("Descriptions")
                        .HasForeignKey("ExperienceID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ResumeProject.Models.Education", b =>
                {
                    b.HasOne("ResumeProject.Models.Person", "Persons")
                        .WithMany("Educations")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ResumeProject.Models.Event", b =>
                {
                    b.HasOne("ResumeProject.Models.Person", "Persons")
                        .WithMany("Events")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ResumeProject.Models.Experience", b =>
                {
                    b.HasOne("ResumeProject.Models.Person", "Persons")
                        .WithOne("Experience")
                        .HasForeignKey("ResumeProject.Models.Experience", "ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ResumeProject.Models.ExperienceType", b =>
                {
                    b.HasOne("ResumeProject.Models.Experience", "Experience")
                        .WithOne("ExperienceTypes")
                        .HasForeignKey("ResumeProject.Models.ExperienceType", "ExperienceID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ResumeProject.Models.PersonalSkill", b =>
                {
                    b.HasOne("ResumeProject.Models.Person", "Persons")
                        .WithMany("PersonalSkills")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
